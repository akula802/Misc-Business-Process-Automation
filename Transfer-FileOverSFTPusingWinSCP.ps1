# Script to upload a file via WinSCP, version 2.0
# This script automates a manual, daily business process for a client
# Called by a scheduled task called 'Transfer Orders' on hypothetical 'Server1'


####  FLOW OF WORK:  ####
# A LOB app automatically creates a .csv file on a network share, called 'orders-YYYYMMDD.csv'
# This script copies it to local storage, and renames it so YYYYMMDD is today's date, and then sends it to the vendor's SFTP server
# The script sends an email to the user responsible for this process, on success or fail
# On fail, it also sends a script to IT, so they can address the issue
# When the SFTP upload is finished, script cleans up >7-day-old copies of the .csv files from local storage




# 1. Create a new PSDrive
Try
    {
        $error.Clear()
        New-PSDrive -Name "Share1" -PSProvider "FileSystem" -Root "\\SQLServer1\LOB-App\Files\Share1" -ErrorAction SilentlyContinue
    }
Catch
    {
        Write-Host Unable to create the PSDrive.
        Write-Host $error
    }



# 2A. Set some variables
$prefix = "orders-"
$datestring = (Get-Date -Format "yyyyMMdd")
$filename = $prefix+$datestring+".csv"
$file = Get-Childitem 'Share1:\' | Where-Object {$_.fullname -match "orders-YYYYMMDD"}
#$file = Get-Childitem 'Share1:\' | Where-Object {$_.fullname -match "$filename"}  # This doesn't work, but the above line does


# 2B. Email body if file copy from the SQL Server fails
$failBody1 = @"
The 'Transfer Orders' task on Server1 has failed. There was a problem copying or renaming the CSV file on the local network.

A ticket has been created with IT for resolution. Error message below:

$error

"@


# 2C. Email body if WinSCP transfer fails 
$failBody2 = @"
The 'Transfer Orders' task on Server1 has failed. There was a connection problem, or the file failed to upload.

A ticket has been created with IT for resolution. Error message below:

$error

"@



# 3. Move and rename the CSV file
Try
    {
        $error.Clear()
        Move-Item -Path $file.FullName -Destination "C:\ProgramData\Scripts\transferOrders" -Force -ErrorAction SilentlyContinue
        if (!(Test-Path -Path "C:\ProgramData\Scripts\transferOrders\orders-YYYYMMDD.csv"))
            {
                Write-Host Unabe to copy the file from the share to local storage.
                Write-Host $error
                Send-MailMessage -To "it@mydomain.com" -Cc "user1@theirdomain.com" -From "exchangeuser@theirdomain.com" -Subject ("Client1 SFTP Upload Failure - Unable to copy file -1") -Body $failBody1 -SmtpServer "client-exchange-server.com" -Port 25
                exit
            } # end if
        else
            {
                $error.Clear()
                Rename-Item -Path "C:\ProgramData\Scripts\transferOrders\orders-YYYYMMDD.csv"  -NewName $filename -ErrorAction SilentlyContinue
            } # end else
    } # end try
Catch
    {
        Write-Host Encountered an exception while moving or renaming the file.
        Send-MailMessage -To "it@mydomain.com" -Cc "user1@theirdomain.com" -From "exchangeuser@theirdomain.com" -Subject ("Client1 SFTP Upload Failure - Unable to copy file -2") -Body $failBody1 -SmtpServer "client-exchange-server.com" -Port 25
        Write-Host $error
        Remove-PSDrive -Name "Share1"
        exit
    } # end catch




# 4. Create a session and send - code auto-generated within WinSCP
# This code was generated by WinSCP in the GUI app, and works great
& "C:\Program Files (x86)\WinSCP\WinSCP.com" `
  /log="C:\programData\Scripts\transferOrders\WinSCP.log" /ini=nul `
  /command `
    "open sftp://user:password@sftp.vendor-sftp-server.com/ -hostkey=`"`"ssh-rsa 2048 aabbccddeeffgghhiijjkkllmmnnoppqqrrssttuuvv=`"`"" `
    "lcd C:\ProgramData\Scripts\transferOrders" `
    "cd /IncomingOrders" `
    "put $filename" `
    "exit"


# Check the results of the upload
$winscpResult = $LastExitCode
if ($winscpResult -eq 0)
{
  Write-Host "Success"
  Send-MailMessage -To "user1@theirdomain.com" -From "exchangeuser@theirdomain.com" -Subject ("Client1 SFTP Upload Complete") -Body ("Upload completed without error at {0}" -f (Get-Date)) -SmtpServer "client-exchange-server.com" -Port 25
}
else
{
  Write-Host "Error"
  Send-MailMessage -To "it@mydomain.com" -Cc "user1@theirdomain" -From "exchangeuser@theirdomain.com" -Subject ("Client1 SFTP Upload Failure - transfer failed") -Body $failBody2 -SmtpServer "client-exchange-server.com" -Port 25
}

exit $winscpResult



# 5. Cleanup: Remove the PSDrive
Try
    {
        $error.Clear()
        Remove-PSDrive -Name "Share1"
    }
Catch
    {
        Write-Host Unable to remove the PSDrive.
        Write-Host $error
        exit
    }



# 6. Cleanup: Delete CSV files older than 7 days in the local folder
Try
    {
        $error.Clear()

        # Define the 'old file' threshhold, and the path to the backup files
        $today = Get-Date
        $threshhold = $today.AddDays(-7)
        $filesPath = "C:\ProgramData\Scripts\transferOrders\*"

        # Get / select the old backup files
        $oldCsvFiles = Get-Item -Path $filesPath | `
                        Select-Object | `
                        Where-Object {$_.LastWriteTime -lt $threshhold `
                        -and $_.Extension -like "*.csv"}

        # Loop through the old files and remove them
        ForEach ($file in $oldCsvFiles)
            {
                Remove-Item $file
            }
    } # End try
Catch
    {
        Write-Host Something went wrong cleaning up the old .csv files.
        Write-Host $error
        exit
    }

